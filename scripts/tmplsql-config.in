#!/bin/sh

prefix=@prefix@
exec_prefix=@exec_prefix@
exec_prefix_set=no
CC="@CC@"
CXX="@CXX@"

cross_compiling=@cross_compiling@
target=@host_alias@
static_flag=no

usage()
{
    cat <<EOF
Usage: @LIBRARY_NAME@-config [--version] [--static]
                 [--libs] [--cppflags] [--cflags] [--cxxflags]
                

@LIBRARY_NAME@-config returns configuration information about the installed
version of @LIBRARY_NAME@. It may be used to query its version,
cflags and linking arguments. 
EOF

    exit $1
}

cppflags()
{
    if test "@includedir@" != "/usr/include" \
	-a "@includedir@" != "/usr/local/include" \
	-a "@includedir@" != "/usr/include/c++" \
	-a \( "${cross_compiling}" != "yes" \
	    -o "@includedir@" != "/usr/${target}/include" \) ;
    then
	includes=-I@includedir@
    fi

    echo $includes

}

if test $# -eq 0; then
    usage 1 1>&2
fi

while test $# -gt 0; do
  case "$1" in
  -*=*) optarg=`echo "$1" | sed 's/[-_a-zA-Z0-9]*=//'` ;;
  *) optarg= ;;
  esac

  case $1 in
    --prefix=*)
      prefix=$optarg
      if test $exec_prefix_set = no ; then
        exec_prefix=$optarg
      fi
      ;;
    --prefix)
      echo $prefix
      ;;
    --exec-prefix=*)
      exec_prefix=$optarg
      exec_prefix_set=yes
      ;;
    --exec-prefix)
      echo $exec_prefix
      ;;
    --version)
      echo @VERSION@
      ;;
    --static)
      static_flag=yes
      ;;
    --cppflags)
      cppflags
      ;;
    --cflags)
      echo `cppflags`
      ;;
    --cxxflags)
      echo `cppflags`
      ;;
    --libs)
      if test "@libdir@" != "/usr/lib" \
	    -a "@libdir@" != "/usr/local/lib"  ;
      then
          libs="-L@libdir@"
      fi
      
      if test $static_flag = yes ; then
          echo "$libs @libdir@/lib@LIBRARY_NAME@.a"
      else
          echo "$libs -l@LIBRARY_NAME@ -lpq"
      fi
      ;;
    *)
      usage 1 1>&2
      ;;
  esac
  shift
done

